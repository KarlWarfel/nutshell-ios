//
//  StyleKitName.swift
//  NutshellGraph
//
//  Created by LAK on 9/14/15.
//  Copyright (c) 2015 Tidepool. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit
import CoreGraphics

public class GraphViews : NSObject {
    
    //// Drawing Methods
    
    public class func drawGraphBackground(viewSize viewSize: CGSize) {
        //// Color Declarations
        let fillColor = UIColor(red: 0.949, green: 0.953, blue: 0.961, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.918, green: 0.937, blue: 0.941, alpha: 1.000)
        let strokeColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let textForeground = UIColor(red: 0.345, green: 0.349, blue: 0.357, alpha: 1.000)
        let strokeColor2 = UIColor(red: 0.863, green: 0.882, blue: 0.886, alpha: 1.000)
        let strokeColor3 = UIColor(red: 0.886, green: 0.894, blue: 0.906, alpha: 1.000)
        
        //// Frames
        let backgroundFrame = CGRectMake(0, 0, (viewSize.width + 12), (viewSize.height + 9))
        
        
        //// contents
        //// Rectangle-70-Copy-45 Drawing
        let rectangle70Copy45Path = UIBezierPath(rect: CGRectMake(backgroundFrame.minX + 326, backgroundFrame.minY + 55.61, 326, 541))
        fillColor.setFill()
        rectangle70Copy45Path.fill()
        
        
        //// Rectangle-70-Copy-46 Drawing
        let rectangle70Copy46Path = UIBezierPath(rect: CGRectMake(backgroundFrame.minX, backgroundFrame.minY + 55.61, 326, 541))
        fillColor2.setFill()
        rectangle70Copy46Path.fill()
        
        
        //// Line-Copy-139 Drawing
        let lineCopy139Path = UIBezierPath()
        lineCopy139Path.moveToPoint(CGPointMake(backgroundFrame.minX + 48.56, backgroundFrame.minY + 177.17))
        lineCopy139Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 646.27, backgroundFrame.minY + 177.17))
        lineCopy139Path.miterLimit = 4;
        
        lineCopy139Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy139Path.lineJoinStyle = CGLineJoin.Round;
        
        lineCopy139Path.usesEvenOddFillRule = true;
        
        strokeColor.setStroke()
        lineCopy139Path.lineWidth = 3
        lineCopy139Path.stroke()
        
        
        //// Line-Copy-140 Drawing
        let lineCopy140Path = UIBezierPath()
        lineCopy140Path.moveToPoint(CGPointMake(backgroundFrame.minX + 48.57, backgroundFrame.minY + 280.74))
        lineCopy140Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 646.27, backgroundFrame.minY + 280.74))
        lineCopy140Path.miterLimit = 4;
        
        lineCopy140Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy140Path.lineJoinStyle = CGLineJoin.Round;
        
        lineCopy140Path.usesEvenOddFillRule = true;
        
        strokeColor.setStroke()
        lineCopy140Path.lineWidth = 3
        lineCopy140Path.stroke()
        
        
        //// Label Drawing
        let labelRect = CGRectMake(backgroundFrame.minX + 6.81, backgroundFrame.minY + 69, 35.25, 34)
        let labelStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        labelStyle.alignment = NSTextAlignment.Left
        
        let labelFontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: labelStyle]
        
        "300".drawInRect(labelRect, withAttributes: labelFontAttributes)
        
        
        //// Label 2 Drawing
        let label2Rect = CGRectMake(backgroundFrame.minX + 6.81, backgroundFrame.minY + 156, 35.25, 34)
        let label2Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label2Style.alignment = NSTextAlignment.Left
        
        let label2FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label2Style]
        
        "180".drawInRect(label2Rect, withAttributes: label2FontAttributes)
        
        
        //// Label 3 Drawing
        let label3Rect = CGRectMake(backgroundFrame.minX + 14.81, backgroundFrame.minY + 260, 23.83, 33)
        let label3Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label3Style.alignment = NSTextAlignment.Left
        
        let label3FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label3Style]
        
        "80".drawInRect(label3Rect, withAttributes: label3FontAttributes)
        
        
        //// Label 4 Drawing
        let label4Rect = CGRectMake(backgroundFrame.minX + 14.81, backgroundFrame.minY + 359, 23.83, 34)
        let label4Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label4Style.alignment = NSTextAlignment.Left
        
        let label4FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label4Style]
        
        "40".drawInRect(label4Rect, withAttributes: label4FontAttributes)
        
        
        //// Label 5 Drawing
        let label5Rect = CGRectMake(backgroundFrame.minX + 92.81, backgroundFrame.minY, 11.42, 34)
        let label5Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label5Style.alignment = NSTextAlignment.Left
        
        let label5FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label5Style]
        
        "8".drawInRect(label5Rect, withAttributes: label5FontAttributes)
        
        
        //// Label 6 Drawing
        let label6Rect = CGRectMake(backgroundFrame.minX + 108.67, backgroundFrame.minY + 3, 9.01, 29)
        let label6Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label6Style.alignment = NSTextAlignment.Left
        
        let label6FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 17)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label6Style]
        
        "a".drawInRect(label6Rect, withAttributes: label6FontAttributes)
        
        
        //// Label 7 Drawing
        let label7Rect = CGRectMake(backgroundFrame.minX + 416.5, backgroundFrame.minY, 22.83, 34)
        let label7Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label7Style.alignment = NSTextAlignment.Left
        
        let label7FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label7Style]
        
        "11".drawInRect(label7Rect, withAttributes: label7FontAttributes)
        
        
        //// Label 8 Drawing
        let label8Rect = CGRectMake(backgroundFrame.minX + 443.79, backgroundFrame.minY + 3, 9.01, 29)
        let label8Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label8Style.alignment = NSTextAlignment.Left
        
        let label8FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 17)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label8Style]
        
        "a".drawInRect(label8Rect, withAttributes: label8FontAttributes)
        
        
        //// Label 9 Drawing
        let label9Rect = CGRectMake(backgroundFrame.minX + 540.5, backgroundFrame.minY, 22.83, 34)
        let label9Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label9Style.alignment = NSTextAlignment.Left
        
        let label9FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label9Style]
        
        "12".drawInRect(label9Rect, withAttributes: label9FontAttributes)
        
        
        //// Label 10 Drawing
        let label10Rect = CGRectMake(backgroundFrame.minX + 567.79, backgroundFrame.minY + 3, 10.01, 29)
        let label10Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label10Style.alignment = NSTextAlignment.Left
        
        let label10FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 17)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label10Style]
        
        "a".drawInRect(label10Rect, withAttributes: label10FontAttributes)
        
        
        //// Label 11 Drawing
        let label11Rect = CGRectMake(backgroundFrame.minX + 305.5, backgroundFrame.minY, 22.83, 34)
        let label11Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label11Style.alignment = NSTextAlignment.Left
        
        let label11FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label11Style]
        
        "10".drawInRect(label11Rect, withAttributes: label11FontAttributes)
        
        
        //// Label 12 Drawing
        let label12Rect = CGRectMake(backgroundFrame.minX + 332.79, backgroundFrame.minY + 3, 9.01, 29)
        let label12Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label12Style.alignment = NSTextAlignment.Left
        
        let label12FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 17)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label12Style]
        
        "a".drawInRect(label12Rect, withAttributes: label12FontAttributes)
        
        
        //// Label 13 Drawing
        let label13Rect = CGRectMake(backgroundFrame.minX + 199.81, backgroundFrame.minY, 11.42, 34)
        let label13Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label13Style.alignment = NSTextAlignment.Left
        
        let label13FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 20)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label13Style]
        
        "9".drawInRect(label13Rect, withAttributes: label13FontAttributes)
        
        
        //// Label 14 Drawing
        let label14Rect = CGRectMake(backgroundFrame.minX + 215.67, backgroundFrame.minY + 3, 9.01, 29)
        let label14Style = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        label14Style.alignment = NSTextAlignment.Left
        
        let label14FontAttributes = [NSFontAttributeName: UIFont(name: "OpenSans-Light", size: 17)!, NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label14Style]
        
        "a".drawInRect(label14Rect, withAttributes: label14FontAttributes)
        
        
        //// Line-Copy-145 Drawing
        let lineCopy145Path = UIBezierPath()
        lineCopy145Path.moveToPoint(CGPointMake(backgroundFrame.minX + 105.25, backgroundFrame.minY + 38))
        lineCopy145Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 105.25, backgroundFrame.minY + 54.82))
        lineCopy145Path.miterLimit = 4;
        
        lineCopy145Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy145Path.usesEvenOddFillRule = true;
        
        strokeColor2.setStroke()
        lineCopy145Path.lineWidth = 1
        lineCopy145Path.stroke()
        
        
        //// Line-Copy-146 Drawing
        let lineCopy146Path = UIBezierPath()
        lineCopy146Path.moveToPoint(CGPointMake(backgroundFrame.minX + 212.22, backgroundFrame.minY + 38))
        lineCopy146Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 212.22, backgroundFrame.minY + 54.82))
        lineCopy146Path.miterLimit = 4;
        
        lineCopy146Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy146Path.usesEvenOddFillRule = true;
        
        strokeColor2.setStroke()
        lineCopy146Path.lineWidth = 1
        lineCopy146Path.stroke()
        
        
        //// Line-Copy-147 Drawing
        let lineCopy147Path = UIBezierPath()
        lineCopy147Path.moveToPoint(CGPointMake(backgroundFrame.minX + 326.32, backgroundFrame.minY + 40.04))
        lineCopy147Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 326.32, backgroundFrame.minY + 56.85))
        lineCopy147Path.miterLimit = 4;
        
        lineCopy147Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy147Path.usesEvenOddFillRule = true;
        
        strokeColor3.setStroke()
        lineCopy147Path.lineWidth = 1
        lineCopy147Path.stroke()
        
        
        //// Line-Copy-148 Drawing
        let lineCopy148Path = UIBezierPath()
        lineCopy148Path.moveToPoint(CGPointMake(backgroundFrame.minX + 434.31, backgroundFrame.minY + 38))
        lineCopy148Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 434.31, backgroundFrame.minY + 54.82))
        lineCopy148Path.miterLimit = 4;
        
        lineCopy148Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy148Path.usesEvenOddFillRule = true;
        
        strokeColor3.setStroke()
        lineCopy148Path.lineWidth = 1
        lineCopy148Path.stroke()
        
        
        //// Line-Copy-149 Drawing
        let lineCopy149Path = UIBezierPath()
        lineCopy149Path.moveToPoint(CGPointMake(backgroundFrame.minX + 557.58, backgroundFrame.minY + 38))
        lineCopy149Path.addLineToPoint(CGPointMake(backgroundFrame.minX + 557.58, backgroundFrame.minY + 54.82))
        lineCopy149Path.miterLimit = 4;
        
        lineCopy149Path.lineCapStyle = CGLineCap.Square;
        
        lineCopy149Path.usesEvenOddFillRule = true;
        
        strokeColor3.setStroke()
        lineCopy149Path.lineWidth = 1
        lineCopy149Path.stroke()
    }
    
    //// Generated Images
    
    public class func imageOfGraphBackground(viewSize viewSize: CGSize) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(652, 597), false, 0)
        GraphViews.drawGraphBackground(viewSize: viewSize)
        
        let imageOfGraphBackground = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        return imageOfGraphBackground
    }
    
}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
